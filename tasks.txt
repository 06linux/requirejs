Release Notes
-------------------
- removed module.setExports support.
- removed require.def support
- removed require.ready, domReady plugin.
- mention almond release?

Next release
--------------

- mix of types a problem? https://github.com/jrburke/require-cs/issues/5

- almond release: look at splice change

- test rflorence changes to things like bonzo: https://github.com/ded/bonzo/issues/32

- Overriding modules used in r.js? https://github.com/jrburke/r.js/issues/24

- onModuleLoad, useful?

- jQuery 1.7 Beta 1: try it, also need to document define.amd.jQuery flag.

--------------

- clarify commonjs wrapping in amd api page.
- add amd test for dynamic that uses commonjs wrapper, remove dynamic from list of APIs require.js supports.


- has() source trimming, needs brace matching?


- need to surface pragmasOnSave better?


- cdnjs: how to use with fallback

- example using backbone and such.

- example that shows how to do a "include *" in a build.

- coffeescript: extend duplication: https://github.com/jrburke/require-cs/issues/7

- backbone


- Support require({priority: ['config']}) and have it affect paths for
  paused resources. Trouble is makeModuleMap burns in the URL with the old
  config, before the priority config loads, and the name resolution in
  normalize uses package map information to resolve some names. ARGH PACKAGES!
  It would also be good to avoid having to rename plugin resources after
  a resource finishes loading. Maybe for both of those reasons, work out
  a different algorithm in the loader.
  HMM: is priority config even needed? Isn't a nested require enough?
  Well, it is a bit different, but map out why.

- integrate properly with cpm

- A way to support local file/other kinds of caches?
http://groups.google.com/group/requirejs/browse_thread/thread/77092307ac6b9acb
http://www.html5rocks.com/en/tutorials/file/filesystem/#toc-filesystemurls

Docs:

- Pointer to motivations behind current thing, reason for dependencies.

- Update the coffeescript plugin to use the writeFile API?

- jjb's diagnostic/debug branch with dependency mappings

- https://github.com/jrburke/requirejs/issues/104: define as a special dependency?

- replacement for modify that intercepts callbacks, holds off until another module loads them?
  - A way to show dependency graph too?
- Minify the require.js files with UglifyJS.

- https://github.com/jrburke/requirejs/pull/71: process by 2/21

- If any other info: IE checkLoaded recursion? https://github.com/jrburke/requirejs/issues/82

Bugs to work on
------------------

- Update AMD page to mention require scanning means only do them at the top.

- Consider patches in jetpack for:
  - removing scanning
  - add amd object
  - add plugins?

- building with packages.build.js, the alpha/replace path mapping does not work out?

- build's name insertion if there is comment between define( and the [dependencies]

- ending slash in paths should throw error: https://github.com/jrburke/requirejs/issues/issue/49/

- Document new closure compiler options from neonstalwart
- require.modify alternative syntax/patch.
- has.js plugins
- require.def patch: https://github.com/jrburke/requirejs/pull/50

- Visualization of dependencies, highlighting circular dependencies: RobbertAtWork

- email on jsonp removal, toUrl and package names.

- Nested package config: https://github.com/jrburke/requirejs/pull/28

- IE, on errors, hits script onload, but need to make sure it is treated as a failure?

- https://github.com/jrburke/requirejs/issues#issue/26:
  spider: throw with isCheckLoaded: maybe pass for refactor branch?

https://github.com/jrburke/requirejs/issues/issue/9
- Optimizer cannot include order! plugins in a build at the moment.

Optimizer improvements:
2) Investigate the issue with main.js baseUrl overriding the one in app.build.js
4) See if the pathing can be made simpler (abde's comment).

- Figure out if isCheckLoaded can be avoided. Not likely, but revisit.

- Finish PS3 work, investigate test failures, document level of support.

- Check out blackberry emulators at:
https://www.blackberry.com/Downloads/entry.do?code=060AD92489947D410D897474079C1477

- Building a lib that has its own lookup paths, so it can be self-contained?
  but what if want to share code? Maybe just make it an option, you can do it,
  but lose out on shared common.

- For function(require, exports, module) form, do not pass exports if the function
  does not ask  for it, to allow the function to set the exported value by returning.

- Figure out why priorityOrder test does not work, and if it should be supported.
  Loading a plugin while waiting for a priority load may not be worth supporting,
  it also means it will be slower. A priority module can include plugins but just
  use a plugin to load the priorit module.

- DOH updates
  - get latest code
  - fix rendering in IE 9 standards? How to get it to render in IE9 standard mode?

- Allow module names that match Object.prototype method names?
- browser test for loading css?

- Best practices/architecture guide

- consider removing require.isBrowser and require.s.isBrowser, check the tests, and send email to list first.

- Make sure text plugin works offline.
- Get Blackberry simulator. Blackberry greater than 4.6, and particulary with the Blackberry 9500 simulator (with OS v4.7),
install and launch Blackberry MDS service simulator before running simulator to get network.

- trying to find path of the file executed, as given to rhino:
http://groups.google.com/group/jsdoc-2/msg/b1dd2f8991156fa0

- with appName, and no native require, setting path to be outside the baseUrl meant that the require path was really
  relative to the output folder name?

- Use JSDoc to document a full module?

- When doing docs via jsdoc, using {some/module} as return types? How does JSDoc deal with the nested objects?
  Probably needs custom work to get it recognize the module concept thing.

- To validate with Caja: http://caja.appspot.com/ and paste the code inside a script tag.
