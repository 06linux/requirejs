- Look at module function call during recurse instead of building up the ordered
  array of modules.
  
- No head tag, slow connection. Put run.js in a div inside body, or head tag after
body etc...

- Use . instead of ! for file extensions for text! dependencies?

- Allow custom build tool that collects a bunch of runjs modules into one file.
  - CSS optimization support (from dojo)?
  - Build pragmas

- loading more than one locale for a page. A locales= option?

- convertDojo.js: add in pause/resume when more than one provide is in the file.

- Rhino tests.

- Build converters that can convert dojo and commonjs modules into runjs format.


Completed Items
==================
0.0.6
------------
Removed the Function specifier. That was for circular dependencies, but due to
concerns about identity, decided to not support that use case. Now, a module
function can return any value it wants to define itself, can be Function, Object,
String, Number, Boolean, whatever. And now, for circular dependency, the circular
dependency will be null. I decided not to throw in that case because I wan run to
be able to load existing code that does not call back to run to define a module.
To support circular dependencies, the module function can use run.get() to fetch
that circular dependency later, outside the circular dependency loop.

0.0.5
------------
Introduce plugin concept for run.js. i18n code moved to a plugin.

0.0.4
------------
pause/resume for build layers

0.0.3
------------
- Module modifiers
- Better function module support
- Allow run() calls that just have a config object.

0.0.2
------------
- Allow modules to be defined with a plain object instead of a callback.
- i18n bundle support.

0.0.1
------------
- Basic module loading
- Support non-runjs module loading, if file ends in .js
- Supports loading modules with different versions by using context names in
  top-level run() calls.
