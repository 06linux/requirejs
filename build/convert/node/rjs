/**
 * @license rjs Copyright (c) 2010, The Dojo Foundation All Rights Reserved.
 * Available via the MIT, GPL or new BSD license.
 * see: http://github.com/jrburke/requirejs for details
 */

/*jslint nomen: false */
/*global require: true, process: false, global: false */
"use strict";

/*
 This file is an adapter file to allow RequireJS to run in node.
 This file assumes the create.js process has run to create a new
 node project directory that works with RequireJS. Once create.js
 has done its work, then you can run the project like so (assuming
 you are in the new project's directory):
 > node rjs index.js
*/

(function () {
    var fs = require("fs"),
        sys = require("sys"),
        cwd = process.cwd(),
        appFilePath = process.argv[2],
        appDir, files, pathMap = {}, paths = "";

    function execPath(path) {
        process.compile(fs.readFileSync(path), path);
    }

    function join() {
        return Array.prototype.join.call(arguments, "/");
    }

    //Set up two globals to be used by require/node.js
    //require/node.js will delete these properties after
    //it grabs the functions for itself.
    global.__requireExecPath = execPath;
    global.__requireLog = sys.puts;

    //Make sure path to app file is absolute.
    if (appFilePath.charAt(0) !== "/") {
        appFilePath = join(cwd, appFilePath);
    }

    //Now get app directory.
    appDir = appFilePath.split("/");
    appDir.pop();
    appDir = appDir.join("/");

    //Clear our require, RequireJS can override.
    require = null;

    //Load up basic bootstrap.
    [
        join(appDir, "lib", "require.js"),
        join(appDir, "lib", "require", "node.js")
    ].forEach(function (path) {
        execPath(path);
    });

    //Read the files in lib to generate correct path config for them.
    files = fs.readdirSync(join(appDir, "lib"));
    files.forEach(function (file) {
        //Pull off any file extension
        var lastIndex = file.lastIndexOf(".");
        if (lastIndex !== -1) {
            file = file.substring(0, lastIndex);
        }
        if (!pathMap[file]) {
            paths += (paths ? ",\n" : "") + "'" + file + "': 'lib/" + file + "'";
            pathMap[file] = true;
        }
    });

    //Set the baseUrl to be the app directory, and pass in the paths.
    process.compile("require({baseUrl: '" + appDir + "', paths: {" + paths + "}});", "baseUrl");

    //Showtime!
    process.compile(fs.readFileSync(appFilePath), appFilePath);
}());
